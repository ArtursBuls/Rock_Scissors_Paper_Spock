[{"C:\\Codelex\\ReactReact\\1\\todotodo\\src\\index.tsx":"1","C:\\Codelex\\ReactReact\\1\\todotodo\\src\\reportWebVitals.ts":"2","C:\\Codelex\\ReactReact\\1\\todotodo\\src\\components\\cardToDo.tsx":"3","C:\\Codelex\\ReactReact\\1\\todotodo\\src\\ToDoo.tsx":"4","C:\\Codelex\\ReactReact\\Akmens_Skeres_papirs\\src\\index.tsx":"5","C:\\Codelex\\ReactReact\\Akmens_Skeres_papirs\\src\\reportWebVitals.ts":"6","C:\\Codelex\\ReactReact\\Akmens_Skeres_papirs\\src\\Challenge.tsx":"7","C:\\Codelex\\ReactReact\\Akmens_Skeres_papirs\\src\\components\\button\\Button.tsx":"8"},{"size":517,"mtime":1607871333446,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":564,"mtime":1607864440071,"results":"12","hashOfConfig":"10"},{"size":3089,"mtime":1608049908584,"results":"13","hashOfConfig":"10"},{"size":531,"mtime":1610623661304,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":5596,"mtime":1610645524672,"results":"17","hashOfConfig":"15"},{"size":318,"mtime":1610612847709,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1w6c2k5",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"oihwaj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Codelex\\ReactReact\\1\\todotodo\\src\\index.tsx",[],["40","41"],"C:\\Codelex\\ReactReact\\1\\todotodo\\src\\reportWebVitals.ts",[],"C:\\Codelex\\ReactReact\\1\\todotodo\\src\\components\\cardToDo.tsx",[],["42","43"],"C:\\Codelex\\ReactReact\\1\\todotodo\\src\\ToDoo.tsx",["44"],"import React, { useEffect, useState } from 'react';\nimport 'flexboxgrid';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CardToDo } from './components/cardToDo';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport style from './ToDo.module.scss';\n\ntoast.configure()\nfunction ToDoList() {\n\n  const [inputText, setInputText] = useState('');\n  const [toDoList, setToDoList] = useState<string[]>(\n    ['Pamosties no rƒ´ta teicamƒÅ garastƒÅvoklƒ´!',\n      'Ieƒìst brokastis un iedzert rƒ´ta kafiju!',\n      'Codelex rulƒì, nosƒìdƒìt pie datora visu dienu. Izpildƒ´t visus majas darbus!',\n      'KƒÅ man bie≈æi gadƒÅs - nosƒìdƒìt visu dienu pie datora un tupƒ´t kƒÅ traks.' +\n      ' RezultƒÅtƒÅ - nekas nav izdarƒ´ts. Waisted!'\n    ]);\n  const [textColors, setTextColors] = useState<string>('');\n  useEffect(() => {\n    function notify() {\n      toast.info('≈†aujam gaisƒÅ..üåüüåüüåü..Yohooo..!üòé', { position: toast.POSITION.TOP_CENTER })\n    }; notify();\n  }, [])\n\n  const addListHandler = () => {\n    if (inputText) {\n      const newList = [inputText, ...toDoList];\n      setToDoList(newList);\n      setInputText('');\n    }\n  }\n\n  const deleteHandler = (index: number) => {\n    const clonedList = [...toDoList];\n    clonedList.splice(index, 1);\n    setToDoList(clonedList);\n  }\n\n  useEffect(() => {\n    const currAvtiveColor = textColors;\n    if (currAvtiveColor === '') { setTextColors('green') }\n    else if (currAvtiveColor === 'green') { setTextColors('blue') }\n    else if (currAvtiveColor === 'blue') { setTextColors('yellow') }\n    else if (currAvtiveColor === 'yellow') { setTextColors('red') }\n    else { setTextColors('green') };\n\n  }, [toDoList]);\n\n  return (\n    <section>\n      <div className=\"row center-xs\">\n        <div className=\"col-xs-12\">\n          <h2 className={style.headmain}>\n            To Doo... jahuuu....\n          </h2>\n          <h3\n            className={style.christmas}\n            style={{ color: textColors }}\n          >\n            Merry Christmas!\n          </h3>\n        </div>\n      </div>\n      <div className=\"row center-xs\">\n        <div className=\"col-xs-12\">\n          <input\n            type=\"text\"\n            value={inputText}\n            className={style.input}\n            placeholder=\"Please, write here...\"\n            onChange={(e) => setInputText(e.target.value)}\n          />\n          <button\n            className={style.button}\n            onClick={addListHandler}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n      <br />\n      <div className=\"row center-xs\">\n        <div className=\"col-xs-6\">\n          <div className={style.mainWrapper}>\n            {toDoList.map((item, index) => (\n              <div\n                className={style.cardWrapper}\n                key={uuidv4()}>\n                <CardToDo\n                  listItem={item}\n                  deleteHandler={() => deleteHandler(index)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default ToDoList;\n","C:\\Codelex\\ReactReact\\Akmens_Skeres_papirs\\src\\index.tsx",[],["45","46"],"C:\\Codelex\\ReactReact\\Akmens_Skeres_papirs\\src\\reportWebVitals.ts",[],"C:\\Codelex\\ReactReact\\Akmens_Skeres_papirs\\src\\Challenge.tsx",[],"C:\\Codelex\\ReactReact\\Akmens_Skeres_papirs\\src\\components\\button\\Button.tsx",[],["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":49,"column":6,"nodeType":"57","endLine":49,"endColumn":16,"suggestions":"58"},{"ruleId":"49","replacedBy":"59"},{"ruleId":"51","replacedBy":"60"},{"ruleId":"49","replacedBy":"61"},{"ruleId":"51","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],["63"],["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'textColors'. Either include it or remove the dependency array.","ArrayExpression",["65"],["63"],["64"],["63"],["64"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [textColors, toDoList]",{"range":"68","text":"69"},[1661,1671],"[textColors, toDoList]"]